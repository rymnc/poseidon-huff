/* Interface */
#define function hash(uint256) view returns (uint256)

#define constant Q = 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
#define constant C0  = 0x09c46e9ec68e9bd4fe1faaba294cba38a71aa177534cdd1b6c7dc0dbd0abd7a7
#define constant C1  = 0x0c0356530896eec42a97ed937f3135cfc5142b3ae405b8343c1d83ffa604cb81
#define constant C2  = 0x1e28a1d935698ad1142e51182bb54cf4a00ea5aabd6268bd317ea977cc154a30
#define constant C3  = 0x27af2d831a9d2748080965db30e298e40e5757c3e008db964cf9e2b12b91251f
#define constant C4  = 0x1e6f11ce60fc8f513a6a3cfe16ae175a41291462f214cd0879aaf43545b74e03
#define constant C5  = 0x2a67384d3bbd5e438541819cb681f0be04462ed14c3613d8f719206268d142d3
#define constant C6  = 0x0b66fdf356093a611609f8e12fbfecf0b985e381f025188936408f5d5c9f45d0
#define constant C7  = 0x012ee3ec1e78d470830c61093c2ade370b26c83cc5cebeeddaa6852dbdb09e21
// #define constant C8  = 1050793453380762984940163090920066886770841063557081906093018330633089036729
// #define constant C9  = 10665495010329663932664894101216428400933984666065399374198502106997623173873
// #define constant C10 = 19965634623406616956648724894636666805991993496469370618546874926025059150737
// #define constant C11 = 13007250030070838431593222885902415182312449212965120303174723305710127422213
// #define constant C12 = 16877538715074991604507979123743768693428157847423939051086744213162455276374
// #define constant C13 = 18211747749504876135588847560312685184956239426147543810126553367063157141465
// #define constant C14 = 18151553319826126919739798892854572062191241985315767086020821632812331245635
// #define constant C15 = 19957033149976712666746140949846950406660099037474791840946955175819555930825
// #define constant C16 = 3469514863538261843186854830917934449567467100548474599735384052339577040841
// #define constant C17 = 989698510043911779243192466312362856042600749099921773896924315611668507708
// #define constant C18 = 12568377015646290945235387813564567111330046038050864455358059568128000172201
// #define constant C19 = 20856104135605479600325529349246932565148587186338606236677138505306779314172
// #define constant C20 = 8206918720503535523121349917159924938835810381723474192155637697065780938424
// #define constant C21 = 1309058477013932989380617265069188723120054926187607548493110334522527703566
// #define constant C22 = 14076116939332667074621703729512195584105250395163383769419390236426287710606
// #define constant C23 = 10153498892749751942204288991871286290442690932856658983589258153608012428674
// #define constant C24 = 18202499207234128286137597834010475797175973146805180988367589376893530181575
// #define constant C25 = 12739388830157083522877690211447248168864006284243907142044329113461613743052
// #define constant C26 = 15123358710467780770838026754240340042441262572309759635224051333176022613949
// #define constant C27 = 19925004701844594370904593774447343836015483888496504201331110250494635362184
// #define constant C28 = 10352416606816998476681131583320899030072315953910679608943150613208329645891
// #define constant C29 = 10567371822366244361703342347428230537114808440249611395507235283708966113221
// #define constant C30 = 5635498582763880627392290206431559361272660937399944184533035305989295959602
// #define constant C31 = 11866432933224219174041051738704352719163271639958083608224676028593315904909
// #define constant C32 = 5795020705294401441272215064554385591292330721703923167136157291459784140431
// #define constant C33 = 9482202378699252817564375087302794636287866584767523335624368774856230692758
// #define constant C34 = 4245237636894546151746468406560945873445548423466753843402086544922216329298
// #define constant C35 = 12000500941313982757584712677991730019124834399479314697467598397927435905133
// #define constant C36 = 7596790274058425558167520209857956363736666939016807569082239187494363541787
// #define constant C37 = 2484867918246116343205467273440098378820186751202461278013576281097918148877
// #define constant C38 = 18312645949449997391810445935615409295369169383463185688973803378104013950190
// #define constant C39 = 15320686572748723004980855263301182130424010735782762814513954166519592552733
// #define constant C40 = 12618438900597948888520621062416758747872180395546164387827245287017031303859
// #define constant C41 = 17438141672027706116733201008397064011774368832458707512367404736905021019585
// #define constant C42 = 6374197807230665998865688675365359100400438034755781666913068586172586548950
// #define constant C43 = 2189398913433273865510950346186699930188746169476472274335177556702504595264
// #define constant C44 = 6268495580028970231803791523870131137294646402347399003576649137450213034606
// #define constant C45 = 17896250365994900261202920044129628104272791547990619503076839618914047059275
// #define constant C46 = 13692156312448722528008862371944543449350293305158722920787736248435893008873
// #define constant C47 = 15234446864368744483209945022439268713300180233589581910497691316744177619376
// #define constant C48 = 1572426502623310766593681563281600503979671244997798691029595521622402217227
// #define constant C49 = 80103447810215150918585162168214870083573048458555897999822831203653996617
// #define constant C50 = 8228820324013669567851850635126713973797711779951230446503353812192849106342
// #define constant C51 = 5375851433746509614045812476958526065449377558695752132494533666370449415873
// #define constant C52 = 12115998939203497346386774317892338270561208357481805380546938146796257365018
// #define constant C53 = 9764067909645821279940531410531154041386008396840887338272986634350423466622
// #define constant C54 = 8538708244538850542384936174629541085495830544298260335345008245230827876882
// #define constant C55 = 7140127896620013355910287215441004676619168261422440177712039790284719613114
// #define constant C56 = 14297402962228458726038826185823085337698917275385741292940049024977027409762
// #define constant C57 = 6667115556431351074165934212337261254608231545257434281887966406956835140819
// #define constant C58 = 20226761165244293291042617464655196752671169026542832236139342122602741090001
// #define constant C59 = 12038289506489256655759141386763477208196694421666339040483042079632134429119
// #define constant C60 = 19027757334170818571203982241812412991528769934917288000224335655934473717551
// #define constant C61 = 16272152964456553579565580463468069884359929612321610357528838696790370074720
// #define constant C62 = 2500392889689246014710135696485946334448570271481948765283016105301740284071
// #define constant C63 = 8595254970528530312401637448610398388203855633951264114100575485022581946023
// #define constant C64 = 11635945688914011450976408058407206367914559009113158286982919675551688078198
// #define constant C65 = 614739068603482619581328040478536306925147663946742687395148680260956671871
// #define constant C66 = 18692271780377861570175282183255720350972693125537599213951106550953176268753
// #define constant C67 = 4987059230784976306647166378298632695585915319042844495357753339378260807164
// #define constant C68 = 21851403978498723616722415377430107676258664746210815234490134600998983955497
// #define constant C69 = 9830635451186415300891533983087800047564037813328875992115573428596207326204
// #define constant C70 = 4842706106434537116860242620706030229206345167233200482994958847436425185478
// #define constant C71 = 6422235064906823218421386871122109085799298052314922856340127798647926126490
// #define constant C72 = 4564364104986856861943331689105797031330091877115997069096365671501473357846
// #define constant C73 = 1944043894089780613038197112872830569538541856657037469098448708685350671343
// #define constant C74 = 21179865974855950600518216085229498748425990426231530451599322283119880194955
// #define constant C75 = 14296697761894107574369608843560006996183955751502547883167824879840894933162
// #define constant C76 = 12274619649702218570450581712439138337725246879938860735460378251639845671898
// #define constant C77 = 16371396450276899401411886674029075408418848209575273031725505038938314070356
// #define constant C78 = 3702561221750983937578095019779188631407216522704543451228773892695044653565
// #define constant C79 = 19721616877735564664624984774636557499099875603996426215495516594530838681980
// #define constant C80 = 6383350109027696789969911008057747025018308755462287526819231672217685282429
// #define constant C81 = 20860583956177367265984596617324237471765572961978977333122281041544719622905
// #define constant C82 = 5766390934595026947545001478457407504285452477687752470140790011329357286275
// #define constant C83 = 4043175758319898049344746138515323336207420888499903387536875603879441092484
// #define constant C84 = 15579382179133608217098622223834161692266188678101563820988612253342538956534
// #define constant C85 = 1864640783252634743892105383926602930909039567065240010338908865509831749824
// #define constant C86 = 15943719865023133586707144161652035291705809358178262514871056013754142625673
// #define constant C87 = 2326415993032390211558498780803238091925402878871059708106213703504162832999
// #define constant C88 = 19995326402773833553207196590622808505547443523750970375738981396588337910289
// #define constant C89 = 5143583711361588952673350526320181330406047695593201009385718506918735286622
// #define constant C90 = 15436006486881920976813738625999473183944244531070780793506388892313517319583
// #define constant C91 = 16660446760173633166698660166238066533278664023818938868110282615200613695857
// #define constant C92 = 4966065365695755376133119391352131079892396024584848298231004326013366253934
// #define constant C93 = 20683781957411705574951987677641476019618457561419278856689645563561076926702
// #define constant C94 = 17280836839165902792086432296371645107551519324565649849400948918605456875699
// #define constant C95 = 17045635513701208892073056357048619435743564064921155892004135325530808465371
// #define constant C96 = 17055032967194400710390142791334572297458033582458169295920670679093585707295
// #define constant C97 = 15727174639569115300068198908071514334002742825679221638729902577962862163505
// #define constant C98 = 1001755657610446661315902885492677747789366510875120894840818704741370398633
// #define constant C99 = 18638547332826171619311285502376343504539399518545103511265465604926625041234
// #define constant C100 = 6751954224763196429755298529194402870632445298969935050224267844020826420799
// #define constant C101 = 3526747115904224771452549517614107688674036840088422555827581348280834879405
// #define constant C102 = 15705897908180497062880001271426561999724005008972544196300715293701537574122
// #define constant C103 = 574386695213920937259007343820417029802510752426579750428758189312416867750
// #define constant C104 = 15973040855000600860816974646787367136127946402908768408978806375685439868553
// #define constant C105 = 20934130413948796333037139460875996342810005558806621330680156931816867321122
// #define constant C106 = 6918585327145564636398173845411579411526758237572034236476079610890705810764
// #define constant C107 = 14158163500813182062258176233162498241310167509137716527054939926126453647182
// #define constant C108 = 4164602626597695668474100217150111342272610479949122406544277384862187287433
// #define constant C109 = 12146526846507496913615390662823936206892812880963914267275606265272996025304
// #define constant C110 = 10153527926900017763244212043512822363696541810586522108597162891799345289938
// #define constant C111 = 13564663485965299104296214940873270349072051793008946663855767889066202733588
// #define constant C112 = 5612449256997576125867742696783020582952387615430650198777254717398552960096
// #define constant C113 = 12151885480032032868507892738683067544172874895736290365318623681886999930120
// #define constant C114 = 380452237704664384810613424095477896605414037288009963200982915188629772177
// #define constant C115 = 9067557551252570188533509616805287919563636482030947363841198066124642069518
// #define constant C116 = 21280306817619711661335268484199763923870315733198162896599997188206277056900
// #define constant C117 = 5567165819557297006750252582140767993422097822227408837378089569369734876257
// #define constant C118 = 10411936321072105429908396649383171465939606386380071222095155850987201580137
// #define constant C119 = 21338390051413922944780864872652000187403217966653363270851298678606449622266
// #define constant C120 = 12156296560457833712186127325312904760045212412680904475497938949653569234473
// #define constant C121 = 4271647814574748734312113971565139132510281260328947438246615707172526380757
// #define constant C122 = 9061738206062369647211128232833114177054715885442782773131292534862178874950
// #define constant C123 = 10134551893627587797380445583959894183158393780166496661696555422178052339133
// #define constant C124 = 8932270237664043612366044102088319242789325050842783721780970129656616386103
// #define constant C125 = 3339412934966886386194449782756711637636784424032779155216609410591712750636
// #define constant C126 = 9704903972004596791086522314847373103670545861209569267884026709445485704400
// #define constant C127 = 17467570179597572575614276429760169990940929887711661192333523245667228809456
#define constant M00 = 0x066f6f85d6f68a85ec10345351a23a3aaf07f38af8c952a7bceca70bd2af7ad5
#define constant M01 = 0x2b9d4b4110c9ae997782e1509b1d0fdb20a7c02bbd8bea7305462b9f8125b1e8
#define constant M10 = 0x0cc57cdbb08507d62bf67a4493cc262fb6c09d557013fff1f573f431221f8ff9
#define constant M11 = 0x1274e649a32ed355a31a6ed69724e1adade857e86eb5c3a121bcd147943203c8

#define macro NESTED_MULMOD() = takes(3) returns (2) {
    // mulmod(mulmod(t, t, q), s0, q)
    
    // input stack [inp, s1, s0]
    add // [s1, s0]
    dup1 // [s1, s1, s0]
    dup1 // [s1, s1, s1, s0]
    [Q] // [Q, s1, s1, s1, s0]
    swap2 // [s1, s1, Q, s1, s0]
    mulmod // [t, s1, s0]
    dup1 // [t, t, s1, s0]
    [Q] // [Q, t, t, s1, s0]
    swap2 // [t, t, Q, s1, s0]
    mulmod // [t_i, s1, s0]
    [Q] // [Q, t_i, s1, s0]
    swap2 // [s1, t_i, Q, s0]
    swap1 // [t_i, s1, Q, s0]
    mulmod // [s1, s0]
}

#define macro MIX() = takes(2) returns(4) {
    // t := add(mulmod(s0, M00, q), mulmod(s1, M01, q))
    // s1 := add(mulmod(s0, M10, q), mulmod(s1, M11, q))
    // s0 := t

    // input stack [s1, s0]
    [Q] // [Q, s1, s0]
    [M00] // [M00, Q, s1, s0]
    dup4 // [s0, M00, Q, s1, s0]
    mulmod // [t_int, s1, s0]
    [Q] [M01] // [M01, Q, t_int, s1, s0]
    dup4 // [s1, M01, Q, t_int, s1, s0]
    mulmod // [t_int2, t_int, s1, s0]
    add // [t, s1, s0]
    [Q] // [Q, t, s1, s0]
    [M10] // [M10, Q, t, s1, s0]
    dup5 // [s0, M10, Q, t, s1, s0]
    mulmod // [t_int, t, s1, s0]
    [Q] [M11] // [M11, Q, t_int, t, s1, s0]
    dup5 // [s1, M11, Q, t_int, t, s1, s0]
    mulmod swap1 // [t_int, t_int2, t, s1, s0]
    add // [s1, s0, s1(old), s0(old)]
}

#define macro FIRST_ROUND() = takes(0) returns(2) {
    [C0] // [C0 = s0]
    [C0] // [C0, C0 = s0]
    [Q] // [Q, C0, C0]
    swap2 // [C0, C0, Q]
    mulmod // [t]
    dup1 // [t, t]
    [Q] // [Q, t, t]
    swap2 // [t, t, Q]
    mulmod // [t_i]
    [C0] // [C0, t_i]
    [Q] // [Q, C0, t_i]
    swap2 // [t_i, C0, Q]
    mulmod // [s0]
    [C1] // [C1, s0]
    0x04 calldataload // [input, C1, s0]
    NESTED_MULMOD()
    MIX()
}

#define macro CLEAN_STACK() = takes(4) returns(2) {
    // input stack [s1, s0, s1(old), s0(old)]
    swap2 pop swap2 pop // [s1, s0]
}

#define macro FULL_ROUND(const_a, const_b) = takes(2) returns (4) {
    // input stack: [s1, s0]
    // SBOX
    swap1 // [s0, s1]
    <const_a> // [C2, s0, s1]
    NESTED_MULMOD()
    swap1 // [s1, s0]
    <const_b> // [C3, s1, s0] 
    NESTED_MULMOD()
    // MIX
    MIX() // [s1, s0, s1(old), s0(old)]
}

#define macro MAIN() = takes (0) returns (0) {
    // Poseidon parameters should be t = 2, RF = 8, RP = 56
   
    FIRST_ROUND() // [s1, s0, s1(old), s0(old)]
    CLEAN_STACK()

    // ROUND 1 - FULL
    FULL_ROUND(C2, C3) // [s1, s0, s1(old), s0(old)]
    CLEAN_STACK()

    // ROUND 2 - FULL
    FULL_ROUND(C4, C5)
    CLEAN_STACK()

    // ROUND 3 - FULL
    FULL_ROUND(C6, C7)
    CLEAN_STACK()

    // return s0 to compare with solidity impl
    pop
    0x00 mstore
    0x20 0x00 return
}

// TODOS:
// - convert all bigints to hex encoded uint256s
// - abstract common opcode sets into macros
// - write partial round macro
// - compare gas + bytecode size w/ PoseidonHasher.sol
// - optimize to remove the CLEAN_STACK() macro